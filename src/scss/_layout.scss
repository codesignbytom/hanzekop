/* ------------------------------
   Aspect Ratio Utilities
   ------------------------------ */

// Generate aspect ratio classes from $aspect_ratios
@each $aspect-name, $aspect-value in $aspect_ratios {
  .aspect-#{$aspect-name} {
    aspect-ratio: $aspect-value;
  }
}

/* ------------------------------
   Column Utilities
   ------------------------------ */
// Loop for numeric column classes
@for $i from 1 through 12 {
  .columns-#{$i} {
    columns: $i;
  }
}

// Class for 'columns-auto'
.columns-auto {
  columns: auto;
}

// Loop for named size column classes
@each $name, $size in $column_sizes {
  .columns-#{$name} {
    columns: $size;
  }
}

/* ------------------------------
   Breakpoint Utilities
   ------------------------------ */
@each $name, $value in $break_values {
  // Break-after classes
  .break-after-#{$name} {
    break-after: $value;
  }

  // Break-before classes
  .break-before-#{$name} {
    break-before: $value;
  }
}

@each $name, $value in $break_values {
  // Break-inside classes
  .break-inside-#{$name} {
    break-inside: $value;
  }
}

/* ------------------------------
   Box Decoration Breaks
   ------------------------------ */

@each $name, $value in $box_decoration_breaks {
  .box-decoration-#{$name} {
    box-decoration-break: $value;
  }
}

/* ------------------------------
   Box Sizing
   ------------------------------ */
@each $name, $value in $box_sizings {
  .box-#{$name} {
    box-sizing: $value;
  }
}

/* ------------------------------
   Display properties
   ------------------------------ */
@each $name, $value in $displays {
  .#{$name} {
    display: $value;
  }
}

/* ------------------------------
   Float properties
   ------------------------------ */
@each $name, $value in $floats {
  .float-#{$name} {
    float: $value;
  }
}

// Clear Utilities
@each $name, $value in $clears {
  .clear-#{$name} {
    clear: $value;
  }
}

// Isolation Utilities
@each $name, $value in $isolation {
  .#{$name} {
    isolation: $value;
  }
}

// Object-Fit Utilities
@each $name, $value in $object_fits {
  .object-#{$name} {
    object-fit: $value;
  }
}

// Object-Position Utilities
@each $name, $value in $object_positions {
  .object-#{$name} {
    object-position: $value;
  }
}

// Overflow Utilities
@each $name, $value in $overflow_axis {
  .#{$name} {
    @if str-index($name, "x-") {
      overflow-x: $value;
    } @else if str-index($name, "y-") {
      overflow-y: $value;
    }
  }
}

// Overscroll Behavior Utilities
@each $name, $value in $overscroll_behaviors {
  .overscroll-#{$name} {
    overscroll-behavior: $value;
  }
}

// Corrected loop for axis-specific classes
@each $name, $value in $overscroll_axis {
  .#{$name} {
    // Correctly reference overscroll-behavior or overscroll-behavior-{x/y}
    @if str-index($name, "y-") {
      overscroll-behavior-y: $value;
    } @else if str-index($name, "x-") {
      overscroll-behavior-x: $value;
    }
  }
}

// Positional Utilities
@each $name, $value in $positions {
  .#{$name} {
    position: $value;
  }
}

// Visibility Utilities
@each $name, $value in $visibilities {
  .#{$name} {
    visibility: $value;
  }
}

// Z-Index Utilities
@each $name, $value in $z_indexes {
  .z-#{$name} {
    z-index: $value;
  }
}

/* ------------------------------
   Positional Utilities
   ------------------------------ */

// Generate positional utility classes for inset, top, right, bottom, left
@each $key, $value in $sizes {
  // Inset utilities for all sides
  .inset-#{$key} {
    inset: $value;
  }

  // Horizontal inset utilities
  .inset-x-#{$key} {
    left: $value;
    right: $value;
  }

  // Vertical inset utilities
  .inset-y-#{$key} {
    top: $value;
    bottom: $value;
  }

  // Logical properties for start and end
  .start-#{$key} {
    inset-inline-start: $value;
  }
  .end-#{$key} {
    inset-inline-end: $value;
  }

  // Individual side utilities
  .top-#{$key} {
    top: $value;
  }
  .right-#{$key} {
    right: $value;
  }
  .bottom-#{$key} {
    bottom: $value;
  }
  .left-#{$key} {
    left: $value;
  }
}
